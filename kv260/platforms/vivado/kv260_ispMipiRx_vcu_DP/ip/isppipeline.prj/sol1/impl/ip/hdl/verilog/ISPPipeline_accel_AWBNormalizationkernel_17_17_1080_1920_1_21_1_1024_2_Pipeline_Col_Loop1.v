// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module ISPPipeline_accel_AWBNormalizationkernel_17_17_1080_1920_1_21_1_1024_2_Pipeline_Col_Loop1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        impop_data1_dout,
        impop_data1_num_data_valid,
        impop_data1_fifo_cap,
        impop_data1_empty_n,
        impop_data1_read,
        ltm_in_data242_din,
        ltm_in_data242_num_data_valid,
        ltm_in_data242_fifo_cap,
        ltm_in_data242_full_n,
        ltm_in_data242_write,
        p_read1,
        empty_100,
        conv7_i184,
        empty_101,
        conv7_i184_1,
        empty,
        conv7_i184_2
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [29:0] impop_data1_dout;
input  [1:0] impop_data1_num_data_valid;
input  [1:0] impop_data1_fifo_cap;
input   impop_data1_empty_n;
output   impop_data1_read;
output  [29:0] ltm_in_data242_din;
input  [1:0] ltm_in_data242_num_data_valid;
input  [1:0] ltm_in_data242_fifo_cap;
input   ltm_in_data242_full_n;
output   ltm_in_data242_write;
input  [10:0] p_read1;
input  [17:0] empty_100;
input  [25:0] conv7_i184;
input  [17:0] empty_101;
input  [25:0] conv7_i184_1;
input  [17:0] empty;
input  [25:0] conv7_i184_2;

reg ap_idle;
reg impop_data1_read;
reg ltm_in_data242_write;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
reg    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
reg    ap_block_state8_pp0_stage0_iter7;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln377_fu_177_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    impop_data1_blk_n;
wire    ap_block_pp0_stage0;
reg    ltm_in_data242_blk_n;
reg    ap_block_pp0_stage0_11001;
wire  signed [43:0] conv7_i184_2_cast_fu_157_p1;
reg  signed [43:0] conv7_i184_2_cast_reg_599;
wire  signed [43:0] conv7_i184_1_cast_fu_161_p1;
reg  signed [43:0] conv7_i184_1_cast_reg_604;
wire  signed [43:0] conv7_i184_cast_fu_165_p1;
reg  signed [43:0] conv7_i184_cast_reg_609;
wire   [9:0] trunc_ln859_fu_194_p1;
reg   [9:0] trunc_ln859_reg_618;
reg   [9:0] tmp_13_reg_623;
reg   [9:0] tmp_15_reg_628;
reg   [14:0] tmp_60_reg_648;
wire   [9:0] trunc_ln260_fu_353_p1;
reg   [9:0] trunc_ln260_reg_653;
reg   [14:0] tmp_62_reg_658;
wire   [9:0] trunc_ln260_5_fu_432_p1;
reg   [9:0] trunc_ln260_5_reg_663;
reg   [14:0] tmp_64_reg_668;
wire   [9:0] trunc_ln260_6_fu_511_p1;
reg   [9:0] trunc_ln260_6_reg_673;
wire   [9:0] select_ln260_fu_520_p3;
reg   [9:0] select_ln260_reg_678;
wire   [9:0] select_ln260_3_fu_532_p3;
reg   [9:0] select_ln260_3_reg_683;
wire   [9:0] select_ln260_4_fu_544_p3;
reg   [9:0] select_ln260_4_reg_688;
reg   [10:0] col_V_fu_98;
wire   [10:0] col_V_4_fu_183_p2;
wire    ap_loop_init;
reg   [10:0] ap_sig_allocacmp_col_V_3;
reg    ap_block_pp0_stage0_01001;
wire   [15:0] shl_ln_fu_218_p3;
wire   [17:0] zext_ln859_fu_225_p1;
wire  signed [17:0] value_V_fu_229_p2;
wire   [15:0] shl_ln859_1_fu_238_p3;
wire   [17:0] zext_ln859_1_fu_245_p1;
wire  signed [17:0] value_V_1_fu_249_p2;
wire   [15:0] shl_ln859_2_fu_258_p3;
wire   [17:0] zext_ln859_2_fu_265_p1;
wire  signed [17:0] value_V_2_fu_269_p2;
wire  signed [43:0] grp_fu_559_p2;
wire   [31:0] tmp_s_fu_278_p4;
wire   [47:0] shl_ln5_fu_287_p3;
wire   [37:0] shl_ln1319_1_fu_299_p3;
wire  signed [48:0] sext_ln1319_fu_295_p1;
wire  signed [48:0] sext_ln1319_1_fu_307_p1;
wire   [48:0] r_V_14_fu_311_p2;
wire   [0:0] tmp_59_fu_327_p3;
wire   [24:0] finalmul_V_fu_317_p4;
wire   [24:0] dstval_V_fu_335_p3;
wire  signed [43:0] grp_fu_565_p2;
wire   [31:0] tmp_14_fu_357_p4;
wire   [47:0] shl_ln1319_2_fu_366_p3;
wire   [37:0] shl_ln1319_3_fu_378_p3;
wire  signed [48:0] sext_ln1319_2_fu_374_p1;
wire  signed [48:0] sext_ln1319_3_fu_386_p1;
wire   [48:0] r_V_17_fu_390_p2;
wire   [0:0] tmp_61_fu_406_p3;
wire   [24:0] finalmul_V_1_fu_396_p4;
wire   [24:0] dstval_V_2_fu_414_p3;
wire  signed [43:0] grp_fu_571_p2;
wire   [31:0] tmp_16_fu_436_p4;
wire   [47:0] shl_ln1319_4_fu_445_p3;
wire   [37:0] shl_ln1319_5_fu_457_p3;
wire  signed [48:0] sext_ln1319_4_fu_453_p1;
wire  signed [48:0] sext_ln1319_5_fu_465_p1;
wire   [48:0] r_V_20_fu_469_p2;
wire   [0:0] tmp_63_fu_485_p3;
wire   [24:0] finalmul_V_2_fu_475_p4;
wire   [24:0] dstval_V_3_fu_493_p3;
wire   [0:0] icmp_ln44_fu_515_p2;
wire   [0:0] icmp_ln44_1_fu_527_p2;
wire   [0:0] icmp_ln44_2_fu_539_p2;
wire  signed [25:0] grp_fu_559_p0;
wire  signed [25:0] grp_fu_565_p0;
wire  signed [25:0] grp_fu_571_p0;
reg    grp_fu_559_ce;
reg    grp_fu_565_ce;
reg    grp_fu_571_ce;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_done_reg = 1'b0;
end

ISPPipeline_accel_mul_mul_26s_18s_44_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 26 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 44 ))
mul_mul_26s_18s_44_4_1_U294(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_559_p0),
    .din1(value_V_fu_229_p2),
    .ce(grp_fu_559_ce),
    .dout(grp_fu_559_p2)
);

ISPPipeline_accel_mul_mul_26s_18s_44_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 26 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 44 ))
mul_mul_26s_18s_44_4_1_U295(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_565_p0),
    .din1(value_V_1_fu_249_p2),
    .ce(grp_fu_565_ce),
    .dout(grp_fu_565_p2)
);

ISPPipeline_accel_mul_mul_26s_18s_44_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 26 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 44 ))
mul_mul_26s_18s_44_4_1_U296(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_571_p0),
    .din1(value_V_2_fu_269_p2),
    .ce(grp_fu_571_ce),
    .dout(grp_fu_571_p2)
);

ISPPipeline_accel_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter6_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln377_fu_177_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            col_V_fu_98 <= col_V_4_fu_183_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            col_V_fu_98 <= 11'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        conv7_i184_1_cast_reg_604 <= conv7_i184_1_cast_fu_161_p1;
        conv7_i184_2_cast_reg_599 <= conv7_i184_2_cast_fu_157_p1;
        conv7_i184_cast_reg_609 <= conv7_i184_cast_fu_165_p1;
        tmp_13_reg_623 <= {{impop_data1_dout[19:10]}};
        tmp_15_reg_628 <= {{impop_data1_dout[29:20]}};
        trunc_ln859_reg_618 <= trunc_ln859_fu_194_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        select_ln260_3_reg_683 <= select_ln260_3_fu_532_p3;
        select_ln260_4_reg_688 <= select_ln260_4_fu_544_p3;
        select_ln260_reg_678 <= select_ln260_fu_520_p3;
        tmp_60_reg_648 <= {{dstval_V_fu_335_p3[24:10]}};
        tmp_62_reg_658 <= {{dstval_V_2_fu_414_p3[24:10]}};
        tmp_64_reg_668 <= {{dstval_V_3_fu_493_p3[24:10]}};
        trunc_ln260_5_reg_663 <= trunc_ln260_5_fu_432_p1;
        trunc_ln260_6_reg_673 <= trunc_ln260_6_fu_511_p1;
        trunc_ln260_reg_653 <= trunc_ln260_fu_353_p1;
    end
end

always @ (*) begin
    if (((icmp_ln377_fu_177_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter6_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_col_V_3 = 11'd0;
    end else begin
        ap_sig_allocacmp_col_V_3 = col_V_fu_98;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_559_ce = 1'b1;
    end else begin
        grp_fu_559_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_565_ce = 1'b1;
    end else begin
        grp_fu_565_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_571_ce = 1'b1;
    end else begin
        grp_fu_571_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        impop_data1_blk_n = impop_data1_empty_n;
    end else begin
        impop_data1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        impop_data1_read = 1'b1;
    end else begin
        impop_data1_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        ltm_in_data242_blk_n = ltm_in_data242_full_n;
    end else begin
        ltm_in_data242_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        ltm_in_data242_write = 1'b1;
    end else begin
        ltm_in_data242_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ltm_in_data242_full_n == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b1)) | ((impop_data1_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ltm_in_data242_full_n == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b1)) | ((impop_data1_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ltm_in_data242_full_n == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b1)) | ((impop_data1_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = (impop_data1_empty_n == 1'b0);
end

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state8_pp0_stage0_iter7 = (ltm_in_data242_full_n == 1'b0);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign col_V_4_fu_183_p2 = (ap_sig_allocacmp_col_V_3 + 11'd1);

assign conv7_i184_1_cast_fu_161_p1 = $signed(conv7_i184_1);

assign conv7_i184_2_cast_fu_157_p1 = $signed(conv7_i184_2);

assign conv7_i184_cast_fu_165_p1 = $signed(conv7_i184);

assign dstval_V_2_fu_414_p3 = ((tmp_61_fu_406_p3[0:0] == 1'b1) ? 25'd0 : finalmul_V_1_fu_396_p4);

assign dstval_V_3_fu_493_p3 = ((tmp_63_fu_485_p3[0:0] == 1'b1) ? 25'd0 : finalmul_V_2_fu_475_p4);

assign dstval_V_fu_335_p3 = ((tmp_59_fu_327_p3[0:0] == 1'b1) ? 25'd0 : finalmul_V_fu_317_p4);

assign finalmul_V_1_fu_396_p4 = {{r_V_17_fu_390_p2[48:24]}};

assign finalmul_V_2_fu_475_p4 = {{r_V_20_fu_469_p2[48:24]}};

assign finalmul_V_fu_317_p4 = {{r_V_14_fu_311_p2[48:24]}};

assign grp_fu_559_p0 = conv7_i184_cast_reg_609;

assign grp_fu_565_p0 = conv7_i184_1_cast_reg_604;

assign grp_fu_571_p0 = conv7_i184_2_cast_reg_599;

assign icmp_ln377_fu_177_p2 = ((ap_sig_allocacmp_col_V_3 == p_read1) ? 1'b1 : 1'b0);

assign icmp_ln44_1_fu_527_p2 = (($signed(tmp_62_reg_658) > $signed(15'd0)) ? 1'b1 : 1'b0);

assign icmp_ln44_2_fu_539_p2 = (($signed(tmp_64_reg_668) > $signed(15'd0)) ? 1'b1 : 1'b0);

assign icmp_ln44_fu_515_p2 = (($signed(tmp_60_reg_648) > $signed(15'd0)) ? 1'b1 : 1'b0);

assign ltm_in_data242_din = {{{select_ln260_4_reg_688}, {select_ln260_3_reg_683}}, {select_ln260_reg_678}};

assign r_V_14_fu_311_p2 = ($signed(sext_ln1319_fu_295_p1) - $signed(sext_ln1319_1_fu_307_p1));

assign r_V_17_fu_390_p2 = ($signed(sext_ln1319_2_fu_374_p1) - $signed(sext_ln1319_3_fu_386_p1));

assign r_V_20_fu_469_p2 = ($signed(sext_ln1319_4_fu_453_p1) - $signed(sext_ln1319_5_fu_465_p1));

assign select_ln260_3_fu_532_p3 = ((icmp_ln44_1_fu_527_p2[0:0] == 1'b1) ? 10'd1023 : trunc_ln260_5_reg_663);

assign select_ln260_4_fu_544_p3 = ((icmp_ln44_2_fu_539_p2[0:0] == 1'b1) ? 10'd1023 : trunc_ln260_6_reg_673);

assign select_ln260_fu_520_p3 = ((icmp_ln44_fu_515_p2[0:0] == 1'b1) ? 10'd1023 : trunc_ln260_reg_653);

assign sext_ln1319_1_fu_307_p1 = $signed(shl_ln1319_1_fu_299_p3);

assign sext_ln1319_2_fu_374_p1 = $signed(shl_ln1319_2_fu_366_p3);

assign sext_ln1319_3_fu_386_p1 = $signed(shl_ln1319_3_fu_378_p3);

assign sext_ln1319_4_fu_453_p1 = $signed(shl_ln1319_4_fu_445_p3);

assign sext_ln1319_5_fu_465_p1 = $signed(shl_ln1319_5_fu_457_p3);

assign sext_ln1319_fu_295_p1 = $signed(shl_ln5_fu_287_p3);

assign shl_ln1319_1_fu_299_p3 = {{tmp_s_fu_278_p4}, {6'd0}};

assign shl_ln1319_2_fu_366_p3 = {{tmp_14_fu_357_p4}, {16'd0}};

assign shl_ln1319_3_fu_378_p3 = {{tmp_14_fu_357_p4}, {6'd0}};

assign shl_ln1319_4_fu_445_p3 = {{tmp_16_fu_436_p4}, {16'd0}};

assign shl_ln1319_5_fu_457_p3 = {{tmp_16_fu_436_p4}, {6'd0}};

assign shl_ln5_fu_287_p3 = {{tmp_s_fu_278_p4}, {16'd0}};

assign shl_ln859_1_fu_238_p3 = {{tmp_13_reg_623}, {6'd0}};

assign shl_ln859_2_fu_258_p3 = {{tmp_15_reg_628}, {6'd0}};

assign shl_ln_fu_218_p3 = {{trunc_ln859_reg_618}, {6'd0}};

assign tmp_14_fu_357_p4 = {{grp_fu_565_p2[43:12]}};

assign tmp_16_fu_436_p4 = {{grp_fu_571_p2[43:12]}};

assign tmp_59_fu_327_p3 = r_V_14_fu_311_p2[32'd48];

assign tmp_61_fu_406_p3 = r_V_17_fu_390_p2[32'd48];

assign tmp_63_fu_485_p3 = r_V_20_fu_469_p2[32'd48];

assign tmp_s_fu_278_p4 = {{grp_fu_559_p2[43:12]}};

assign trunc_ln260_5_fu_432_p1 = dstval_V_2_fu_414_p3[9:0];

assign trunc_ln260_6_fu_511_p1 = dstval_V_3_fu_493_p3[9:0];

assign trunc_ln260_fu_353_p1 = dstval_V_fu_335_p3[9:0];

assign trunc_ln859_fu_194_p1 = impop_data1_dout[9:0];

assign value_V_1_fu_249_p2 = (zext_ln859_1_fu_245_p1 - empty_101);

assign value_V_2_fu_269_p2 = (zext_ln859_2_fu_265_p1 - empty);

assign value_V_fu_229_p2 = (zext_ln859_fu_225_p1 - empty_100);

assign zext_ln859_1_fu_245_p1 = shl_ln859_1_fu_238_p3;

assign zext_ln859_2_fu_265_p1 = shl_ln859_2_fu_258_p3;

assign zext_ln859_fu_225_p1 = shl_ln_fu_218_p3;

endmodule //ISPPipeline_accel_AWBNormalizationkernel_17_17_1080_1920_1_21_1_1024_2_Pipeline_Col_Loop1
