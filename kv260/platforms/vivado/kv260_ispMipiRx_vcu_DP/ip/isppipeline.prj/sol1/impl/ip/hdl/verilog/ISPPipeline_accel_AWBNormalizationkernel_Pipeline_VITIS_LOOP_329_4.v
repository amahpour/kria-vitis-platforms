// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module ISPPipeline_accel_AWBNormalizationkernel_Pipeline_VITIS_LOOP_329_4 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        empty_98,
        empty_99,
        empty,
        zext_ln285,
        hist_0_address0,
        hist_0_ce0,
        hist_0_q0,
        hist_1_address0,
        hist_1_ce0,
        hist_1_q0,
        hist_2_address0,
        hist_2_ce0,
        hist_2_q0,
        j,
        conv_i_i1466,
        maxValue_V_i,
        maxValue_V_o,
        maxValue_V_o_ap_vld,
        maxValue_V_4_i,
        maxValue_V_4_o,
        maxValue_V_4_o_ap_vld,
        maxValue_V_3_i,
        maxValue_V_3_o,
        maxValue_V_3_o_ap_vld,
        p_out,
        p_out_ap_vld,
        p_out1,
        p_out1_ap_vld,
        p_out2,
        p_out2_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 3'd1;
parameter    ap_ST_fsm_pp0_stage1 = 3'd2;
parameter    ap_ST_fsm_pp0_stage2 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [17:0] empty_98;
input  [17:0] empty_99;
input  [17:0] empty;
input  [21:0] zext_ln285;
output  [9:0] hist_0_address0;
output   hist_0_ce0;
input  [31:0] hist_0_q0;
output  [9:0] hist_1_address0;
output   hist_1_ce0;
input  [31:0] hist_1_q0;
output  [9:0] hist_2_address0;
output   hist_2_ce0;
input  [31:0] hist_2_q0;
input  [1:0] j;
input  [28:0] conv_i_i1466;
input  [17:0] maxValue_V_i;
output  [17:0] maxValue_V_o;
output   maxValue_V_o_ap_vld;
input  [17:0] maxValue_V_4_i;
output  [17:0] maxValue_V_4_o;
output   maxValue_V_4_o_ap_vld;
input  [17:0] maxValue_V_3_i;
output  [17:0] maxValue_V_3_o;
output   maxValue_V_3_o_ap_vld;
output  [17:0] p_out;
output   p_out_ap_vld;
output  [17:0] p_out1;
output   p_out1_ap_vld;
output  [17:0] p_out2;
output   p_out2_ap_vld;

reg ap_idle;
reg hist_0_ce0;
reg hist_1_ce0;
reg hist_2_ce0;
reg[17:0] maxValue_V_o;
reg maxValue_V_o_ap_vld;
reg[17:0] maxValue_V_4_o;
reg maxValue_V_4_o_ap_vld;
reg[17:0] maxValue_V_3_o;
reg maxValue_V_3_o_ap_vld;
reg[17:0] p_out;
reg p_out_ap_vld;
reg[17:0] p_out1;
reg p_out1_ap_vld;
reg[17:0] p_out2;
reg p_out2_ap_vld;

(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_pp0_stage2_subdone;
wire   [0:0] icmp_ln1069_fu_378_p2;
wire   [0:0] icmp_ln1081_fu_373_p2;
reg    ap_condition_exit_pp0_iter0_stage2;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [1:0] j_read_reg_528;
wire   [32:0] conv_i_i1466_cast_fu_303_p1;
reg   [32:0] conv_i_i1466_cast_reg_534;
reg   [11:0] p2_V_2_reg_539;
wire   [31:0] rhs_V_fu_346_p5;
reg   [31:0] rhs_V_reg_560;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state5_pp0_stage1_iter1;
wire    ap_block_pp0_stage1_11001;
reg   [31:0] n2_V_1_reg_566;
wire    ap_block_pp0_stage2_11001;
reg   [0:0] icmp_ln1081_reg_571;
reg   [0:0] icmp_ln1069_reg_575;
wire   [11:0] p2_V_3_fu_383_p2;
reg   [11:0] p2_V_3_reg_579;
reg   [17:0] maxValue_V_read_reg_584;
reg   [17:0] maxValue_V_3_read_reg_592;
reg   [17:0] maxValue_V_4_read_reg_600;
wire   [0:0] icmp_ln1466_fu_400_p2;
wire   [17:0] maxValue_V_7_fu_406_p2;
reg   [17:0] maxValue_V_7_reg_612;
reg    ap_enable_reg_pp0_iter0_reg;
wire    ap_block_pp0_stage1_subdone;
wire   [17:0] ap_phi_reg_pp0_iter0_empty_281_reg_219;
reg   [17:0] ap_phi_reg_pp0_iter1_empty_281_reg_219;
wire   [17:0] ap_phi_reg_pp0_iter0_empty_282_reg_234;
reg   [17:0] ap_phi_reg_pp0_iter1_empty_282_reg_234;
wire   [17:0] ap_phi_reg_pp0_iter0_empty_283_reg_249;
reg   [17:0] ap_phi_reg_pp0_iter1_empty_283_reg_249;
reg   [17:0] ap_phi_mux_empty_278_phi_fu_267_p6;
wire   [17:0] ap_phi_reg_pp0_iter1_empty_278_reg_264;
reg   [17:0] ap_phi_mux_empty_279_phi_fu_280_p6;
wire   [17:0] ap_phi_reg_pp0_iter1_empty_279_reg_277;
reg   [17:0] ap_phi_mux_empty_280_phi_fu_293_p6;
wire   [17:0] ap_phi_reg_pp0_iter1_empty_280_reg_290;
wire   [63:0] zext_ln587_fu_339_p1;
wire    ap_block_pp0_stage0;
wire   [17:0] maxValue_V_6_load_load_fu_469_p1;
wire    ap_block_pp0_stage2;
wire   [17:0] maxValue_V_2_load_load_fu_466_p1;
wire   [17:0] maxValue_V_1_load_load_fu_463_p1;
reg   [31:0] lhs_V_fu_82;
wire   [31:0] n2_V_fu_388_p2;
wire   [31:0] zext_ln285_cast_fu_307_p1;
wire    ap_loop_init;
reg   [11:0] p2_V_fu_86;
reg   [11:0] ap_sig_allocacmp_p2_V_2;
reg   [17:0] maxValue_V_1_fu_90;
reg   [17:0] maxValue_V_2_fu_94;
reg   [17:0] maxValue_V_6_fu_98;
wire    ap_block_pp0_stage0_01001;
wire    ap_block_pp0_stage1_01001;
wire    ap_block_pp0_stage1;
wire   [32:0] zext_ln232_fu_360_p1;
wire   [32:0] zext_ln232_23_fu_364_p1;
wire   [32:0] ret_V_fu_367_p2;
wire   [17:0] tmp_8_fu_392_p5;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [2:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to1;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_425;
reg    ap_condition_423;
reg    ap_condition_432;
reg    ap_condition_435;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

ISPPipeline_accel_mux_32_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_32_32_1_1_U277(
    .din0(hist_0_q0),
    .din1(hist_1_q0),
    .din2(hist_2_q0),
    .din3(j),
    .dout(rhs_V_fu_346_p5)
);

ISPPipeline_accel_mux_32_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .din2_WIDTH( 18 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 18 ))
mux_32_18_1_1_U278(
    .din0(maxValue_V_read_reg_584),
    .din1(maxValue_V_3_read_reg_592),
    .din2(maxValue_V_4_read_reg_600),
    .din3(j),
    .dout(tmp_8_fu_392_p5)
);

ISPPipeline_accel_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage2),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_exit_pp0_iter0_stage2) | ((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~(j_read_reg_528 == 2'd0) & ~(j_read_reg_528 == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1466_fu_400_p2 == 1'd1) & (icmp_ln1069_reg_575 == 1'd0) & (icmp_ln1081_reg_571 == 1'd1))) begin
        ap_phi_reg_pp0_iter1_empty_281_reg_219 <= 18'd0;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1466_fu_400_p2 == 1'd0) & (icmp_ln1069_reg_575 == 1'd0) & (icmp_ln1081_reg_571 == 1'd1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1466_fu_400_p2 == 1'd1) & (icmp_ln1069_reg_575 == 1'd0) & (icmp_ln1081_reg_571 == 1'd1) & (j_read_reg_528 == 2'd0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1466_fu_400_p2 == 1'd1) & (icmp_ln1069_reg_575 == 1'd0) & (icmp_ln1081_reg_571 == 1'd1) & (j_read_reg_528 == 2'd1)))) begin
        ap_phi_reg_pp0_iter1_empty_281_reg_219 <= maxValue_V_4_read_reg_600;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_phi_reg_pp0_iter1_empty_281_reg_219 <= ap_phi_reg_pp0_iter0_empty_281_reg_219;
    end
end

always @ (posedge ap_clk) begin
    if (((~(j_read_reg_528 == 2'd0) & ~(j_read_reg_528 == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1466_fu_400_p2 == 1'd1) & (icmp_ln1069_reg_575 == 1'd0) & (icmp_ln1081_reg_571 == 1'd1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1466_fu_400_p2 == 1'd0) & (icmp_ln1069_reg_575 == 1'd0) & (icmp_ln1081_reg_571 == 1'd1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1466_fu_400_p2 == 1'd1) & (icmp_ln1069_reg_575 == 1'd0) & (icmp_ln1081_reg_571 == 1'd1) & (j_read_reg_528 == 2'd0)))) begin
        ap_phi_reg_pp0_iter1_empty_282_reg_234 <= maxValue_V_3_read_reg_592;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1466_fu_400_p2 == 1'd1) & (icmp_ln1069_reg_575 == 1'd0) & (icmp_ln1081_reg_571 == 1'd1) & (j_read_reg_528 == 2'd1))) begin
        ap_phi_reg_pp0_iter1_empty_282_reg_234 <= 18'd0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_phi_reg_pp0_iter1_empty_282_reg_234 <= ap_phi_reg_pp0_iter0_empty_282_reg_234;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1466_fu_400_p2 == 1'd1) & (icmp_ln1069_reg_575 == 1'd0) & (icmp_ln1081_reg_571 == 1'd1) & (j_read_reg_528 == 2'd0))) begin
        ap_phi_reg_pp0_iter1_empty_283_reg_249 <= 18'd0;
    end else if (((~(j_read_reg_528 == 2'd0) & ~(j_read_reg_528 == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1466_fu_400_p2 == 1'd1) & (icmp_ln1069_reg_575 == 1'd0) & (icmp_ln1081_reg_571 == 1'd1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1466_fu_400_p2 == 1'd0) & (icmp_ln1069_reg_575 == 1'd0) & (icmp_ln1081_reg_571 == 1'd1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1466_fu_400_p2 == 1'd1) & (icmp_ln1069_reg_575 == 1'd0) & (icmp_ln1081_reg_571 == 1'd1) & (j_read_reg_528 == 2'd1)))) begin
        ap_phi_reg_pp0_iter1_empty_283_reg_249 <= maxValue_V_read_reg_584;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_phi_reg_pp0_iter1_empty_283_reg_249 <= ap_phi_reg_pp0_iter0_empty_283_reg_249;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            lhs_V_fu_82 <= zext_ln285_cast_fu_307_p1;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            lhs_V_fu_82 <= n2_V_fu_388_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        maxValue_V_1_fu_90 <= empty;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        maxValue_V_1_fu_90 <= ap_phi_mux_empty_280_phi_fu_293_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        maxValue_V_2_fu_94 <= empty_99;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        maxValue_V_2_fu_94 <= ap_phi_mux_empty_279_phi_fu_280_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        maxValue_V_6_fu_98 <= empty_98;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        maxValue_V_6_fu_98 <= ap_phi_mux_empty_278_phi_fu_267_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            p2_V_fu_86 <= 12'd1023;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            p2_V_fu_86 <= p2_V_3_reg_579;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_i_i1466_cast_reg_534[28 : 0] <= conv_i_i1466_cast_fu_303_p1[28 : 0];
        p2_V_2_reg_539 <= ap_sig_allocacmp_p2_V_2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1081_fu_373_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        icmp_ln1069_reg_575 <= icmp_ln1069_fu_378_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        icmp_ln1081_reg_571 <= icmp_ln1081_fu_373_p2;
        n2_V_1_reg_566 <= lhs_V_fu_82;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1081_fu_373_p2 == 1'd1) & (icmp_ln1069_fu_378_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        maxValue_V_3_read_reg_592 <= maxValue_V_3_i;
        maxValue_V_4_read_reg_600 <= maxValue_V_4_i;
        maxValue_V_read_reg_584 <= maxValue_V_i;
        p2_V_3_reg_579 <= p2_V_3_fu_383_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1069_reg_575 == 1'd0) & (icmp_ln1081_reg_571 == 1'd1))) begin
        maxValue_V_7_reg_612 <= maxValue_V_7_fu_406_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        rhs_V_reg_560 <= rhs_V_fu_346_p5;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & ((icmp_ln1081_fu_373_p2 == 1'd0) | (icmp_ln1069_fu_378_p2 == 1'd1)))) begin
        ap_condition_exit_pp0_iter0_stage2 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if ((~(j_read_reg_528 == 2'd0) & ~(j_read_reg_528 == 2'd1) & (icmp_ln1069_reg_575 == 1'd0) & (icmp_ln1081_reg_571 == 1'd1))) begin
        ap_phi_mux_empty_278_phi_fu_267_p6 = maxValue_V_7_reg_612;
    end else if ((((icmp_ln1069_reg_575 == 1'd0) & (icmp_ln1081_reg_571 == 1'd1) & (j_read_reg_528 == 2'd0)) | ((icmp_ln1069_reg_575 == 1'd0) & (icmp_ln1081_reg_571 == 1'd1) & (j_read_reg_528 == 2'd1)))) begin
        ap_phi_mux_empty_278_phi_fu_267_p6 = ap_phi_reg_pp0_iter1_empty_281_reg_219;
    end else begin
        ap_phi_mux_empty_278_phi_fu_267_p6 = ap_phi_reg_pp0_iter1_empty_278_reg_264;
    end
end

always @ (*) begin
    if (((~(j_read_reg_528 == 2'd0) & ~(j_read_reg_528 == 2'd1) & (icmp_ln1069_reg_575 == 1'd0) & (icmp_ln1081_reg_571 == 1'd1)) | ((icmp_ln1069_reg_575 == 1'd0) & (icmp_ln1081_reg_571 == 1'd1) & (j_read_reg_528 == 2'd0)))) begin
        ap_phi_mux_empty_279_phi_fu_280_p6 = ap_phi_reg_pp0_iter1_empty_282_reg_234;
    end else if (((icmp_ln1069_reg_575 == 1'd0) & (icmp_ln1081_reg_571 == 1'd1) & (j_read_reg_528 == 2'd1))) begin
        ap_phi_mux_empty_279_phi_fu_280_p6 = maxValue_V_7_reg_612;
    end else begin
        ap_phi_mux_empty_279_phi_fu_280_p6 = ap_phi_reg_pp0_iter1_empty_279_reg_277;
    end
end

always @ (*) begin
    if (((icmp_ln1069_reg_575 == 1'd0) & (icmp_ln1081_reg_571 == 1'd1) & (j_read_reg_528 == 2'd0))) begin
        ap_phi_mux_empty_280_phi_fu_293_p6 = maxValue_V_7_reg_612;
    end else if (((~(j_read_reg_528 == 2'd0) & ~(j_read_reg_528 == 2'd1) & (icmp_ln1069_reg_575 == 1'd0) & (icmp_ln1081_reg_571 == 1'd1)) | ((icmp_ln1069_reg_575 == 1'd0) & (icmp_ln1081_reg_571 == 1'd1) & (j_read_reg_528 == 2'd1)))) begin
        ap_phi_mux_empty_280_phi_fu_293_p6 = ap_phi_reg_pp0_iter1_empty_283_reg_249;
    end else begin
        ap_phi_mux_empty_280_phi_fu_293_p6 = ap_phi_reg_pp0_iter1_empty_280_reg_290;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            ap_sig_allocacmp_p2_V_2 = 12'd1023;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            ap_sig_allocacmp_p2_V_2 = p2_V_3_reg_579;
        end else begin
            ap_sig_allocacmp_p2_V_2 = p2_V_fu_86;
        end
    end else begin
        ap_sig_allocacmp_p2_V_2 = p2_V_fu_86;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        hist_0_ce0 = 1'b1;
    end else begin
        hist_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        hist_1_ce0 = 1'b1;
    end else begin
        hist_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        hist_2_ce0 = 1'b1;
    end else begin
        hist_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_423)) begin
        if (((1'b0 == ap_block_pp0_stage1_01001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            maxValue_V_3_o = maxValue_V_7_reg_612;
        end else if ((1'b1 == ap_condition_425)) begin
            maxValue_V_3_o = 18'd0;
        end else begin
            maxValue_V_3_o = maxValue_V_3_i;
        end
    end else begin
        maxValue_V_3_o = maxValue_V_3_i;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln1069_reg_575 == 1'd0) & (icmp_ln1081_reg_571 == 1'd1) & (j_read_reg_528 == 2'd1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1466_fu_400_p2 == 1'd1) & (icmp_ln1069_reg_575 == 1'd0) & (icmp_ln1081_reg_571 == 1'd1) & (j_read_reg_528 == 2'd1)))) begin
        maxValue_V_3_o_ap_vld = 1'b1;
    end else begin
        maxValue_V_3_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_432)) begin
        if (((1'b0 == ap_block_pp0_stage1_01001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            maxValue_V_4_o = maxValue_V_7_reg_612;
        end else if ((1'b1 == ap_condition_425)) begin
            maxValue_V_4_o = 18'd0;
        end else begin
            maxValue_V_4_o = maxValue_V_4_i;
        end
    end else begin
        maxValue_V_4_o = maxValue_V_4_i;
    end
end

always @ (*) begin
    if (((~(j_read_reg_528 == 2'd0) & ~(j_read_reg_528 == 2'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln1069_reg_575 == 1'd0) & (icmp_ln1081_reg_571 == 1'd1)) | (~(j_read_reg_528 == 2'd0) & ~(j_read_reg_528 == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1466_fu_400_p2 == 1'd1) & (icmp_ln1069_reg_575 == 1'd0) & (icmp_ln1081_reg_571 == 1'd1)))) begin
        maxValue_V_4_o_ap_vld = 1'b1;
    end else begin
        maxValue_V_4_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_435)) begin
        if (((1'b0 == ap_block_pp0_stage1_01001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            maxValue_V_o = maxValue_V_7_reg_612;
        end else if ((1'b1 == ap_condition_425)) begin
            maxValue_V_o = 18'd0;
        end else begin
            maxValue_V_o = maxValue_V_i;
        end
    end else begin
        maxValue_V_o = maxValue_V_i;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln1069_reg_575 == 1'd0) & (icmp_ln1081_reg_571 == 1'd1) & (j_read_reg_528 == 2'd0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1466_fu_400_p2 == 1'd1) & (icmp_ln1069_reg_575 == 1'd0) & (icmp_ln1081_reg_571 == 1'd1) & (j_read_reg_528 == 2'd0)))) begin
        maxValue_V_o_ap_vld = 1'b1;
    end else begin
        maxValue_V_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        if ((icmp_ln1081_fu_373_p2 == 1'd0)) begin
            p_out = maxValue_V_6_load_load_fu_469_p1;
        end else if (((icmp_ln1081_fu_373_p2 == 1'd1) & (icmp_ln1069_fu_378_p2 == 1'd1))) begin
            p_out = maxValue_V_6_fu_98;
        end else begin
            p_out = 'bx;
        end
    end else begin
        p_out = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        if ((icmp_ln1081_fu_373_p2 == 1'd0)) begin
            p_out1 = maxValue_V_2_load_load_fu_466_p1;
        end else if (((icmp_ln1081_fu_373_p2 == 1'd1) & (icmp_ln1069_fu_378_p2 == 1'd1))) begin
            p_out1 = maxValue_V_2_fu_94;
        end else begin
            p_out1 = 'bx;
        end
    end else begin
        p_out1 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln1081_fu_373_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((icmp_ln1081_fu_373_p2 == 1'd1) & (icmp_ln1069_fu_378_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        p_out1_ap_vld = 1'b1;
    end else begin
        p_out1_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        if ((icmp_ln1081_fu_373_p2 == 1'd0)) begin
            p_out2 = maxValue_V_1_load_load_fu_463_p1;
        end else if (((icmp_ln1081_fu_373_p2 == 1'd1) & (icmp_ln1069_fu_378_p2 == 1'd1))) begin
            p_out2 = maxValue_V_1_fu_90;
        end else begin
            p_out2 = 'bx;
        end
    end else begin
        p_out2 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln1081_fu_373_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((icmp_ln1081_fu_373_p2 == 1'd1) & (icmp_ln1069_fu_378_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        p_out2_ap_vld = 1'b1;
    end else begin
        p_out2_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln1081_fu_373_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((icmp_ln1081_fu_373_p2 == 1'd1) & (icmp_ln1069_fu_378_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        p_out_ap_vld = 1'b1;
    end else begin
        p_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_423 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln1069_reg_575 == 1'd0) & (icmp_ln1081_reg_571 == 1'd1) & (j_read_reg_528 == 2'd1));
end

always @ (*) begin
    ap_condition_425 = ((1'b0 == ap_block_pp0_stage0_01001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1466_fu_400_p2 == 1'd1));
end

always @ (*) begin
    ap_condition_432 = (~(j_read_reg_528 == 2'd0) & ~(j_read_reg_528 == 2'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln1069_reg_575 == 1'd0) & (icmp_ln1081_reg_571 == 1'd1));
end

always @ (*) begin
    ap_condition_435 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln1069_reg_575 == 1'd0) & (icmp_ln1081_reg_571 == 1'd1) & (j_read_reg_528 == 2'd0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage2;

assign ap_phi_reg_pp0_iter0_empty_281_reg_219 = 'bx;

assign ap_phi_reg_pp0_iter0_empty_282_reg_234 = 'bx;

assign ap_phi_reg_pp0_iter0_empty_283_reg_249 = 'bx;

assign ap_phi_reg_pp0_iter1_empty_278_reg_264 = 'bx;

assign ap_phi_reg_pp0_iter1_empty_279_reg_277 = 'bx;

assign ap_phi_reg_pp0_iter1_empty_280_reg_290 = 'bx;

assign conv_i_i1466_cast_fu_303_p1 = conv_i_i1466;

assign hist_0_address0 = zext_ln587_fu_339_p1;

assign hist_1_address0 = zext_ln587_fu_339_p1;

assign hist_2_address0 = zext_ln587_fu_339_p1;

assign icmp_ln1069_fu_378_p2 = ((p2_V_2_reg_539 == 12'd0) ? 1'b1 : 1'b0);

assign icmp_ln1081_fu_373_p2 = (($signed(ret_V_fu_367_p2) > $signed(conv_i_i1466_cast_reg_534)) ? 1'b1 : 1'b0);

assign icmp_ln1466_fu_400_p2 = ((tmp_8_fu_392_p5 == 18'd64) ? 1'b1 : 1'b0);

assign j_read_reg_528 = j;

assign maxValue_V_1_load_load_fu_463_p1 = maxValue_V_1_fu_90;

assign maxValue_V_2_load_load_fu_466_p1 = maxValue_V_2_fu_94;

assign maxValue_V_6_load_load_fu_469_p1 = maxValue_V_6_fu_98;

assign maxValue_V_7_fu_406_p2 = ($signed(tmp_8_fu_392_p5) + $signed(18'd262080));

assign n2_V_fu_388_p2 = (n2_V_1_reg_566 - rhs_V_reg_560);

assign p2_V_3_fu_383_p2 = ($signed(p2_V_2_reg_539) + $signed(12'd4095));

assign ret_V_fu_367_p2 = (zext_ln232_fu_360_p1 - zext_ln232_23_fu_364_p1);

assign zext_ln232_23_fu_364_p1 = rhs_V_reg_560;

assign zext_ln232_fu_360_p1 = lhs_V_fu_82;

assign zext_ln285_cast_fu_307_p1 = zext_ln285;

assign zext_ln587_fu_339_p1 = ap_sig_allocacmp_p2_V_2;

always @ (posedge ap_clk) begin
    conv_i_i1466_cast_reg_534[32:29] <= 4'b0000;
end

endmodule //ISPPipeline_accel_AWBNormalizationkernel_Pipeline_VITIS_LOOP_329_4
