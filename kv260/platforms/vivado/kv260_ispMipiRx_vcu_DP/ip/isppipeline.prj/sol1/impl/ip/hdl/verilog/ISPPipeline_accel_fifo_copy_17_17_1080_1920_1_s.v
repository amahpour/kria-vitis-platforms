// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module ISPPipeline_accel_fifo_copy_17_17_1080_1920_1_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        demosaic_out_data241_dout,
        demosaic_out_data241_num_data_valid,
        demosaic_out_data241_fifo_cap,
        demosaic_out_data241_empty_n,
        demosaic_out_data241_read,
        ltm_in_data242_din,
        ltm_in_data242_num_data_valid,
        ltm_in_data242_fifo_cap,
        ltm_in_data242_full_n,
        ltm_in_data242_write,
        height,
        width
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_state2 = 3'd2;
parameter    ap_ST_fsm_state3 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [29:0] demosaic_out_data241_dout;
input  [1:0] demosaic_out_data241_num_data_valid;
input  [1:0] demosaic_out_data241_fifo_cap;
input   demosaic_out_data241_empty_n;
output   demosaic_out_data241_read;
output  [29:0] ltm_in_data242_din;
input  [1:0] ltm_in_data242_num_data_valid;
input  [1:0] ltm_in_data242_fifo_cap;
input   ltm_in_data242_full_n;
output   ltm_in_data242_write;
input  [10:0] height;
input  [10:0] width;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg demosaic_out_data241_read;
reg ltm_in_data242_write;

(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire    grp_fifo_copy_17_17_1080_1920_1_Pipeline_Col_Loop_fu_54_ap_start;
wire    grp_fifo_copy_17_17_1080_1920_1_Pipeline_Col_Loop_fu_54_ap_done;
wire    grp_fifo_copy_17_17_1080_1920_1_Pipeline_Col_Loop_fu_54_ap_idle;
wire    grp_fifo_copy_17_17_1080_1920_1_Pipeline_Col_Loop_fu_54_ap_ready;
wire    grp_fifo_copy_17_17_1080_1920_1_Pipeline_Col_Loop_fu_54_demosaic_out_data241_read;
wire   [29:0] grp_fifo_copy_17_17_1080_1920_1_Pipeline_Col_Loop_fu_54_ltm_in_data242_din;
wire    grp_fifo_copy_17_17_1080_1920_1_Pipeline_Col_Loop_fu_54_ltm_in_data242_write;
reg    grp_fifo_copy_17_17_1080_1920_1_Pipeline_Col_Loop_fu_54_ap_start_reg;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln187_fu_71_p2;
wire    ap_CS_fsm_state3;
reg   [10:0] row_V_fu_38;
wire   [10:0] row_V_2_fu_76_p2;
reg   [2:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
reg    ap_ST_fsm_state3_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'd1;
#0 grp_fifo_copy_17_17_1080_1920_1_Pipeline_Col_Loop_fu_54_ap_start_reg = 1'b0;
end

ISPPipeline_accel_fifo_copy_17_17_1080_1920_1_Pipeline_Col_Loop grp_fifo_copy_17_17_1080_1920_1_Pipeline_Col_Loop_fu_54(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_fifo_copy_17_17_1080_1920_1_Pipeline_Col_Loop_fu_54_ap_start),
    .ap_done(grp_fifo_copy_17_17_1080_1920_1_Pipeline_Col_Loop_fu_54_ap_done),
    .ap_idle(grp_fifo_copy_17_17_1080_1920_1_Pipeline_Col_Loop_fu_54_ap_idle),
    .ap_ready(grp_fifo_copy_17_17_1080_1920_1_Pipeline_Col_Loop_fu_54_ap_ready),
    .demosaic_out_data241_dout(demosaic_out_data241_dout),
    .demosaic_out_data241_num_data_valid(2'd0),
    .demosaic_out_data241_fifo_cap(2'd0),
    .demosaic_out_data241_empty_n(demosaic_out_data241_empty_n),
    .demosaic_out_data241_read(grp_fifo_copy_17_17_1080_1920_1_Pipeline_Col_Loop_fu_54_demosaic_out_data241_read),
    .ltm_in_data242_din(grp_fifo_copy_17_17_1080_1920_1_Pipeline_Col_Loop_fu_54_ltm_in_data242_din),
    .ltm_in_data242_num_data_valid(2'd0),
    .ltm_in_data242_fifo_cap(2'd0),
    .ltm_in_data242_full_n(ltm_in_data242_full_n),
    .ltm_in_data242_write(grp_fifo_copy_17_17_1080_1920_1_Pipeline_Col_Loop_fu_54_ltm_in_data242_write),
    .width(width)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_fifo_copy_17_17_1080_1920_1_Pipeline_Col_Loop_fu_54_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln187_fu_71_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            grp_fifo_copy_17_17_1080_1920_1_Pipeline_Col_Loop_fu_54_ap_start_reg <= 1'b1;
        end else if ((grp_fifo_copy_17_17_1080_1920_1_Pipeline_Col_Loop_fu_54_ap_ready == 1'b1)) begin
            grp_fifo_copy_17_17_1080_1920_1_Pipeline_Col_Loop_fu_54_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        row_V_fu_38 <= 11'd0;
    end else if (((icmp_ln187_fu_71_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        row_V_fu_38 <= row_V_2_fu_76_p2;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

always @ (*) begin
    if ((grp_fifo_copy_17_17_1080_1920_1_Pipeline_Col_Loop_fu_54_ap_done == 1'b0)) begin
        ap_ST_fsm_state3_blk = 1'b1;
    end else begin
        ap_ST_fsm_state3_blk = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln187_fu_71_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln187_fu_71_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        demosaic_out_data241_read = grp_fifo_copy_17_17_1080_1920_1_Pipeline_Col_Loop_fu_54_demosaic_out_data241_read;
    end else begin
        demosaic_out_data241_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ltm_in_data242_write = grp_fifo_copy_17_17_1080_1920_1_Pipeline_Col_Loop_fu_54_ltm_in_data242_write;
    end else begin
        ltm_in_data242_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln187_fu_71_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((grp_fifo_copy_17_17_1080_1920_1_Pipeline_Col_Loop_fu_54_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign grp_fifo_copy_17_17_1080_1920_1_Pipeline_Col_Loop_fu_54_ap_start = grp_fifo_copy_17_17_1080_1920_1_Pipeline_Col_Loop_fu_54_ap_start_reg;

assign icmp_ln187_fu_71_p2 = ((row_V_fu_38 == height) ? 1'b1 : 1'b0);

assign ltm_in_data242_din = grp_fifo_copy_17_17_1080_1920_1_Pipeline_Col_Loop_fu_54_ltm_in_data242_din;

assign row_V_2_fu_76_p2 = (row_V_fu_38 + 11'd1);

endmodule //ISPPipeline_accel_fifo_copy_17_17_1080_1920_1_s
