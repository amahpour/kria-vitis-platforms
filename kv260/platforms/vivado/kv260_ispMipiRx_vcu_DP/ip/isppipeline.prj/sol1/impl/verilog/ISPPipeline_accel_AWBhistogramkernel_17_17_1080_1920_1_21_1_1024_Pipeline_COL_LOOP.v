// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module ISPPipeline_accel_AWBhistogramkernel_17_17_1080_1920_1_21_1_1024_Pipeline_COL_LOOP (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        demosaic_out_data241_dout,
        demosaic_out_data241_num_data_valid,
        demosaic_out_data241_fifo_cap,
        demosaic_out_data241_empty_n,
        demosaic_out_data241_read,
        impop_data1_din,
        impop_data1_num_data_valid,
        impop_data1_fifo_cap,
        impop_data1_full_n,
        impop_data1_write,
        void_AWBhistogramkernel_Mat_Mat_unsigned_int_1024_float_float_float_float_23,
        void_AWBhistogramkernel_Mat_Mat_unsigned_int_1024_float_float_float_float_22,
        void_AWBhistogramkernel_Mat_Mat_unsigned_int_1024_float_float_float_float_21,
        void_AWBhistogramkernel_Mat_Mat_unsigned_int_1024_float_float_float_float_20,
        void_AWBhistogramkernel_Mat_Mat_unsigned_int_1024_float_float_float_float_19,
        void_AWBhistogramkernel_Mat_Mat_unsigned_int_1024_float_float_float_float_18,
        void_AWBhistogramkernel_Mat_Mat_unsigned_int_1024_float_float_float_float_17,
        void_AWBhistogramkernel_Mat_Mat_unsigned_int_1024_float_float_float_float_16,
        void_AWBhistogramkernel_Mat_Mat_unsigned_int_1024_float_float_float_float_15,
        void_AWBhistogramkernel_Mat_Mat_unsigned_int_1024_float_float_float_float_14,
        void_AWBhistogramkernel_Mat_Mat_unsigned_int_1024_float_float_float_float_13,
        void_AWBhistogramkernel_Mat_Mat_unsigned_int_1024_float_float_float_float_12,
        empty,
        tmp_hist_V_address0,
        tmp_hist_V_ce0,
        tmp_hist_V_we0,
        tmp_hist_V_d0,
        tmp_hist_V_q0,
        tmp_hist1_V_address0,
        tmp_hist1_V_ce0,
        tmp_hist1_V_we0,
        tmp_hist1_V_d0,
        tmp_hist1_V_q0,
        tmp_hist_V_1_address0,
        tmp_hist_V_1_ce0,
        tmp_hist_V_1_we0,
        tmp_hist_V_1_d0,
        tmp_hist_V_1_q0,
        tmp_hist1_V_1_address0,
        tmp_hist1_V_1_ce0,
        tmp_hist1_V_1_we0,
        tmp_hist1_V_1_d0,
        tmp_hist1_V_1_q0,
        tmp_hist_V_2_address0,
        tmp_hist_V_2_ce0,
        tmp_hist_V_2_we0,
        tmp_hist_V_2_d0,
        tmp_hist_V_2_q0,
        tmp_hist1_V_2_address0,
        tmp_hist1_V_2_ce0,
        tmp_hist1_V_2_we0,
        tmp_hist1_V_2_d0,
        tmp_hist1_V_2_q0,
        tmp_acc1_4_out,
        tmp_acc1_4_out_ap_vld,
        tmp_acc_4_out,
        tmp_acc_4_out_ap_vld,
        tmp1_5_out,
        tmp1_5_out_ap_vld,
        tmp_5_out,
        tmp_5_out_ap_vld,
        tmp_acc1_2_out,
        tmp_acc1_2_out_ap_vld,
        tmp_acc_2_out,
        tmp_acc_2_out_ap_vld,
        tmp1_4_out,
        tmp1_4_out_ap_vld,
        tmp_4_out,
        tmp_4_out_ap_vld,
        tmp_acc1_out,
        tmp_acc1_out_ap_vld,
        tmp_acc_out,
        tmp_acc_out_ap_vld,
        tmp1_3_out,
        tmp1_3_out_ap_vld,
        tmp_3_out,
        tmp_3_out_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 2'd1;
parameter    ap_ST_fsm_pp0_stage1 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [29:0] demosaic_out_data241_dout;
input  [1:0] demosaic_out_data241_num_data_valid;
input  [1:0] demosaic_out_data241_fifo_cap;
input   demosaic_out_data241_empty_n;
output   demosaic_out_data241_read;
output  [29:0] impop_data1_din;
input  [1:0] impop_data1_num_data_valid;
input  [1:0] impop_data1_fifo_cap;
input   impop_data1_full_n;
output   impop_data1_write;
input  [31:0] void_AWBhistogramkernel_Mat_Mat_unsigned_int_1024_float_float_float_float_23;
input  [31:0] void_AWBhistogramkernel_Mat_Mat_unsigned_int_1024_float_float_float_float_22;
input  [31:0] void_AWBhistogramkernel_Mat_Mat_unsigned_int_1024_float_float_float_float_21;
input  [31:0] void_AWBhistogramkernel_Mat_Mat_unsigned_int_1024_float_float_float_float_20;
input  [31:0] void_AWBhistogramkernel_Mat_Mat_unsigned_int_1024_float_float_float_float_19;
input  [31:0] void_AWBhistogramkernel_Mat_Mat_unsigned_int_1024_float_float_float_float_18;
input  [31:0] void_AWBhistogramkernel_Mat_Mat_unsigned_int_1024_float_float_float_float_17;
input  [31:0] void_AWBhistogramkernel_Mat_Mat_unsigned_int_1024_float_float_float_float_16;
input  [31:0] void_AWBhistogramkernel_Mat_Mat_unsigned_int_1024_float_float_float_float_15;
input  [31:0] void_AWBhistogramkernel_Mat_Mat_unsigned_int_1024_float_float_float_float_14;
input  [31:0] void_AWBhistogramkernel_Mat_Mat_unsigned_int_1024_float_float_float_float_13;
input  [31:0] void_AWBhistogramkernel_Mat_Mat_unsigned_int_1024_float_float_float_float_12;
input  [11:0] empty;
output  [9:0] tmp_hist_V_address0;
output   tmp_hist_V_ce0;
output   tmp_hist_V_we0;
output  [31:0] tmp_hist_V_d0;
input  [31:0] tmp_hist_V_q0;
output  [9:0] tmp_hist1_V_address0;
output   tmp_hist1_V_ce0;
output   tmp_hist1_V_we0;
output  [31:0] tmp_hist1_V_d0;
input  [31:0] tmp_hist1_V_q0;
output  [9:0] tmp_hist_V_1_address0;
output   tmp_hist_V_1_ce0;
output   tmp_hist_V_1_we0;
output  [31:0] tmp_hist_V_1_d0;
input  [31:0] tmp_hist_V_1_q0;
output  [9:0] tmp_hist1_V_1_address0;
output   tmp_hist1_V_1_ce0;
output   tmp_hist1_V_1_we0;
output  [31:0] tmp_hist1_V_1_d0;
input  [31:0] tmp_hist1_V_1_q0;
output  [9:0] tmp_hist_V_2_address0;
output   tmp_hist_V_2_ce0;
output   tmp_hist_V_2_we0;
output  [31:0] tmp_hist_V_2_d0;
input  [31:0] tmp_hist_V_2_q0;
output  [9:0] tmp_hist1_V_2_address0;
output   tmp_hist1_V_2_ce0;
output   tmp_hist1_V_2_we0;
output  [31:0] tmp_hist1_V_2_d0;
input  [31:0] tmp_hist1_V_2_q0;
output  [31:0] tmp_acc1_4_out;
output   tmp_acc1_4_out_ap_vld;
output  [31:0] tmp_acc_4_out;
output   tmp_acc_4_out_ap_vld;
output  [31:0] tmp1_5_out;
output   tmp1_5_out_ap_vld;
output  [31:0] tmp_5_out;
output   tmp_5_out_ap_vld;
output  [31:0] tmp_acc1_2_out;
output   tmp_acc1_2_out_ap_vld;
output  [31:0] tmp_acc_2_out;
output   tmp_acc_2_out_ap_vld;
output  [31:0] tmp1_4_out;
output   tmp1_4_out_ap_vld;
output  [31:0] tmp_4_out;
output   tmp_4_out_ap_vld;
output  [31:0] tmp_acc1_out;
output   tmp_acc1_out_ap_vld;
output  [31:0] tmp_acc_out;
output   tmp_acc_out_ap_vld;
output  [31:0] tmp1_3_out;
output   tmp1_3_out_ap_vld;
output  [31:0] tmp_3_out;
output   tmp_3_out_ap_vld;

reg ap_idle;
reg demosaic_out_data241_read;
reg impop_data1_write;
reg[9:0] tmp_hist_V_address0;
reg tmp_hist_V_ce0;
reg tmp_hist_V_we0;
reg[9:0] tmp_hist1_V_address0;
reg tmp_hist1_V_ce0;
reg tmp_hist1_V_we0;
reg[9:0] tmp_hist_V_1_address0;
reg tmp_hist_V_1_ce0;
reg tmp_hist_V_1_we0;
reg[9:0] tmp_hist1_V_1_address0;
reg tmp_hist1_V_1_ce0;
reg tmp_hist1_V_1_we0;
reg[9:0] tmp_hist_V_2_address0;
reg tmp_hist_V_2_ce0;
reg tmp_hist_V_2_we0;
reg[9:0] tmp_hist1_V_2_address0;
reg tmp_hist1_V_2_ce0;
reg tmp_hist1_V_2_we0;
reg tmp_acc1_4_out_ap_vld;
reg tmp_acc_4_out_ap_vld;
reg tmp1_5_out_ap_vld;
reg tmp_5_out_ap_vld;
reg tmp_acc1_2_out_ap_vld;
reg tmp_acc_2_out_ap_vld;
reg tmp1_4_out_ap_vld;
reg tmp_4_out_ap_vld;
reg tmp_acc1_out_ap_vld;
reg tmp_acc_out_ap_vld;
reg tmp1_3_out_ap_vld;
reg tmp_3_out_ap_vld;

(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage1;
reg   [0:0] icmp_ln515_reg_1220;
reg    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state4_pp0_stage1_iter1;
wire    ap_block_state6_pp0_stage1_iter2;
reg    ap_block_pp0_stage1_subdone;
reg    ap_condition_exit_pp0_iter0_stage1;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    demosaic_out_data241_blk_n;
wire    ap_block_pp0_stage1;
wire    ap_block_pp0_stage0;
reg    impop_data1_blk_n;
reg   [9:0] reg_510;
reg    ap_block_pp0_stage1_11001;
wire    ap_block_state1_pp0_stage0_iter0;
reg    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state5_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_11001;
reg   [9:0] reg_514;
wire   [0:0] icmp_ln515_fu_590_p2;
reg   [0:0] icmp_ln515_reg_1220_pp0_iter1_reg;
wire   [9:0] trunc_ln884_fu_607_p1;
reg   [9:0] trunc_ln884_reg_1224;
wire   [9:0] tmp_s_fu_627_p4;
reg   [9:0] tmp_s_reg_1229;
reg   [9:0] tmp_1_reg_1234;
wire   [0:0] icmp_ln548_fu_669_p2;
reg   [0:0] icmp_ln548_reg_1240;
wire   [9:0] tmp_6_fu_701_p4;
reg   [9:0] tmp_6_reg_1244;
wire   [0:0] icmp_ln548_1_fu_715_p2;
reg   [0:0] icmp_ln548_1_reg_1249;
wire   [9:0] tmp_10_fu_747_p4;
reg   [9:0] tmp_10_reg_1253;
wire   [0:0] icmp_ln548_2_fu_761_p2;
reg   [0:0] icmp_ln548_2_reg_1258;
wire   [0:0] icmp_ln554_fu_801_p2;
reg   [0:0] icmp_ln554_reg_1267;
wire   [9:0] tmp_8_fu_830_p4;
reg   [9:0] tmp_8_reg_1271;
wire   [0:0] icmp_ln554_1_fu_851_p2;
reg   [0:0] icmp_ln554_1_reg_1281;
wire   [9:0] tmp_12_fu_880_p4;
reg   [9:0] tmp_12_reg_1285;
wire   [0:0] icmp_ln554_2_fu_901_p2;
reg   [0:0] icmp_ln554_2_reg_1295;
reg    ap_enable_reg_pp0_iter0_reg;
wire   [63:0] zext_ln551_fu_679_p1;
wire   [63:0] zext_ln551_1_fu_725_p1;
wire   [63:0] zext_ln551_2_fu_771_p1;
wire   [63:0] zext_ln552_fu_794_p1;
wire   [63:0] zext_ln557_fu_811_p1;
wire   [63:0] zext_ln552_1_fu_844_p1;
wire   [63:0] zext_ln557_1_fu_861_p1;
wire   [63:0] zext_ln552_2_fu_894_p1;
wire   [63:0] zext_ln557_2_fu_911_p1;
wire   [63:0] zext_ln558_fu_945_p1;
wire   [63:0] zext_ln558_1_fu_963_p1;
wire   [63:0] zext_ln558_2_fu_981_p1;
reg   [31:0] col_fu_136;
wire   [31:0] col_3_fu_596_p2;
wire    ap_loop_init;
reg   [31:0] ap_sig_allocacmp_col_2;
reg   [31:0] tmp_3_fu_140;
wire   [31:0] zext_ln598_fu_637_p1;
reg   [31:0] tmp1_fu_144;
wire   [31:0] zext_ln598_1_fu_791_p1;
reg   [31:0] tmp_4_fu_148;
wire   [31:0] zext_ln598_2_fu_711_p1;
reg   [31:0] tmp1_1_fu_152;
wire   [31:0] zext_ln598_3_fu_840_p1;
reg   [31:0] tmp_5_fu_156;
wire   [31:0] zext_ln598_4_fu_757_p1;
reg   [31:0] tmp1_2_fu_160;
wire   [31:0] zext_ln598_5_fu_890_p1;
reg   [31:0] tmp_acc_fu_164;
wire   [31:0] tmp_acc_6_fu_939_p2;
reg   [31:0] ap_sig_allocacmp_tmp_acc_load_1;
reg   [31:0] ap_sig_allocacmp_tmp_acc_load_2;
reg   [31:0] tmp_acc1_fu_168;
wire   [31:0] tmp_acc1_6_fu_1008_p2;
reg   [31:0] ap_sig_allocacmp_tmp_acc1_load_1;
reg   [31:0] ap_sig_allocacmp_tmp_acc1_load_2;
reg   [31:0] tmp_acc_2_fu_172;
wire   [31:0] tmp_acc_7_fu_957_p2;
reg   [31:0] ap_sig_allocacmp_tmp_acc_2_load_1;
reg   [31:0] ap_sig_allocacmp_tmp_acc_2_load_2;
reg   [31:0] tmp_acc1_2_fu_176;
wire   [31:0] tmp_acc1_7_fu_1022_p2;
reg   [31:0] ap_sig_allocacmp_tmp_acc1_2_load_1;
reg   [31:0] ap_sig_allocacmp_tmp_acc1_2_load_2;
reg   [31:0] tmp_acc_4_fu_180;
wire   [31:0] tmp_acc_8_fu_975_p2;
reg   [31:0] ap_sig_allocacmp_tmp_acc_4_load_1;
reg   [31:0] ap_sig_allocacmp_tmp_acc_4_load_2;
reg   [31:0] tmp_acc1_4_fu_184;
wire   [31:0] tmp_acc1_8_fu_1036_p2;
reg   [31:0] ap_sig_allocacmp_tmp_acc1_4_load_1;
reg   [31:0] ap_sig_allocacmp_tmp_acc1_4_load_2;
reg    ap_block_pp0_stage1_01001;
reg    ap_block_pp0_stage0_01001;
wire   [31:0] p_cast_fu_518_p1;
wire   [15:0] lhs_V_fu_614_p3;
wire   [15:0] ret_V_fu_621_p2;
wire   [9:0] trunc_ln884_1_fu_641_p1;
wire   [15:0] lhs_V_8_fu_645_p3;
wire   [15:0] ret_V_46_fu_653_p2;
wire   [15:0] lhs_V_9_fu_687_p3;
wire   [15:0] ret_V_47_fu_695_p2;
wire   [15:0] lhs_V_11_fu_733_p3;
wire   [15:0] ret_V_49_fu_741_p2;
wire   [15:0] lhs_V_10_fu_816_p3;
wire   [15:0] ret_V_48_fu_824_p2;
wire   [15:0] lhs_V_12_fu_866_p3;
wire   [15:0] ret_V_50_fu_874_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg   [1:0] ap_NS_fsm;
reg    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to2;
reg    ap_done_pending_pp0;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_412;
reg    ap_condition_326;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 2'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

ISPPipeline_accel_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage1),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage1)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln515_fu_590_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            col_fu_136 <= col_3_fu_596_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            col_fu_136 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp1_1_fu_152 <= void_AWBhistogramkernel_Mat_Mat_unsigned_int_1024_float_float_float_float_17;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp1_1_fu_152 <= zext_ln598_3_fu_840_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp1_2_fu_160 <= void_AWBhistogramkernel_Mat_Mat_unsigned_int_1024_float_float_float_float_21;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp1_2_fu_160 <= zext_ln598_5_fu_890_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp1_fu_144 <= void_AWBhistogramkernel_Mat_Mat_unsigned_int_1024_float_float_float_float_13;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp1_fu_144 <= zext_ln598_1_fu_791_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            tmp_3_fu_140 <= void_AWBhistogramkernel_Mat_Mat_unsigned_int_1024_float_float_float_float_12;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            tmp_3_fu_140 <= zext_ln598_fu_637_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            tmp_4_fu_148 <= void_AWBhistogramkernel_Mat_Mat_unsigned_int_1024_float_float_float_float_16;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            tmp_4_fu_148 <= zext_ln598_2_fu_711_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            tmp_5_fu_156 <= void_AWBhistogramkernel_Mat_Mat_unsigned_int_1024_float_float_float_float_20;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            tmp_5_fu_156 <= zext_ln598_4_fu_757_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_acc1_2_fu_176 <= void_AWBhistogramkernel_Mat_Mat_unsigned_int_1024_float_float_float_float_19;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_acc1_2_fu_176 <= tmp_acc1_7_fu_1022_p2;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln554_1_reg_1281 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_acc1_2_fu_176 <= tmp_hist1_V_1_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_acc1_4_fu_184 <= void_AWBhistogramkernel_Mat_Mat_unsigned_int_1024_float_float_float_float_23;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_acc1_4_fu_184 <= tmp_acc1_8_fu_1036_p2;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln554_2_reg_1295 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_acc1_4_fu_184 <= tmp_hist1_V_2_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_acc1_fu_168 <= void_AWBhistogramkernel_Mat_Mat_unsigned_int_1024_float_float_float_float_15;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_acc1_fu_168 <= tmp_acc1_6_fu_1008_p2;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln554_reg_1267 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_acc1_fu_168 <= tmp_hist1_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            tmp_acc_2_fu_172 <= void_AWBhistogramkernel_Mat_Mat_unsigned_int_1024_float_float_float_float_18;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            tmp_acc_2_fu_172 <= tmp_acc_7_fu_957_p2;
        end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln548_1_reg_1249 == 1'd0))) begin
            tmp_acc_2_fu_172 <= tmp_hist_V_1_q0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            tmp_acc_4_fu_180 <= void_AWBhistogramkernel_Mat_Mat_unsigned_int_1024_float_float_float_float_22;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            tmp_acc_4_fu_180 <= tmp_acc_8_fu_975_p2;
        end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln548_2_reg_1258 == 1'd0))) begin
            tmp_acc_4_fu_180 <= tmp_hist_V_2_q0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            tmp_acc_fu_164 <= void_AWBhistogramkernel_Mat_Mat_unsigned_int_1024_float_float_float_float_14;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            tmp_acc_fu_164 <= tmp_acc_6_fu_939_p2;
        end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln548_reg_1240 == 1'd0))) begin
            tmp_acc_fu_164 <= tmp_hist_V_q0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        icmp_ln554_1_reg_1281 <= icmp_ln554_1_fu_851_p2;
        icmp_ln554_2_reg_1295 <= icmp_ln554_2_fu_901_p2;
        icmp_ln554_reg_1267 <= icmp_ln554_fu_801_p2;
        tmp_12_reg_1285 <= {{ret_V_50_fu_874_p2[15:6]}};
        tmp_8_reg_1271 <= {{ret_V_48_fu_824_p2[15:6]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln515_reg_1220 <= icmp_ln515_fu_590_p2;
        icmp_ln515_reg_1220_pp0_iter1_reg <= icmp_ln515_reg_1220;
        icmp_ln548_1_reg_1249 <= icmp_ln548_1_fu_715_p2;
        icmp_ln548_2_reg_1258 <= icmp_ln548_2_fu_761_p2;
        icmp_ln548_reg_1240 <= icmp_ln548_fu_669_p2;
        tmp_10_reg_1253 <= {{ret_V_49_fu_741_p2[15:6]}};
        tmp_1_reg_1234 <= {{ret_V_46_fu_653_p2[15:6]}};
        tmp_6_reg_1244 <= {{ret_V_47_fu_695_p2[15:6]}};
        tmp_s_reg_1229 <= {{ret_V_fu_621_p2[15:6]}};
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln515_reg_1220 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        reg_510 <= {{demosaic_out_data241_dout[19:10]}};
        reg_514 <= {{demosaic_out_data241_dout[29:20]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln515_reg_1220 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        trunc_ln884_reg_1224 <= trunc_ln884_fu_607_p1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_subdone) & (icmp_ln515_reg_1220 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (~((ap_loop_exit_ready == 1'b0) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b0))) begin
        ap_done_pending_pp0 = 1'b1;
    end else begin
        ap_done_pending_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to2 = 1'b1;
    end else begin
        ap_idle_pp0_1to2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_col_2 = 32'd0;
    end else begin
        ap_sig_allocacmp_col_2 = col_fu_136;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_412)) begin
        ap_sig_allocacmp_tmp_acc1_2_load_1 = tmp_acc1_7_fu_1022_p2;
    end else begin
        ap_sig_allocacmp_tmp_acc1_2_load_1 = tmp_acc1_2_fu_176;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln554_1_reg_1281 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_sig_allocacmp_tmp_acc1_2_load_2 = tmp_hist1_V_1_q0;
    end else begin
        ap_sig_allocacmp_tmp_acc1_2_load_2 = tmp_acc1_2_fu_176;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_412)) begin
        ap_sig_allocacmp_tmp_acc1_4_load_1 = tmp_acc1_8_fu_1036_p2;
    end else begin
        ap_sig_allocacmp_tmp_acc1_4_load_1 = tmp_acc1_4_fu_184;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (icmp_ln554_2_reg_1295 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_sig_allocacmp_tmp_acc1_4_load_2 = tmp_hist1_V_2_q0;
    end else begin
        ap_sig_allocacmp_tmp_acc1_4_load_2 = tmp_acc1_4_fu_184;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_412)) begin
        ap_sig_allocacmp_tmp_acc1_load_1 = tmp_acc1_6_fu_1008_p2;
    end else begin
        ap_sig_allocacmp_tmp_acc1_load_1 = tmp_acc1_fu_168;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln554_reg_1267 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_sig_allocacmp_tmp_acc1_load_2 = tmp_hist1_V_q0;
    end else begin
        ap_sig_allocacmp_tmp_acc1_load_2 = tmp_acc1_fu_168;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_326)) begin
        ap_sig_allocacmp_tmp_acc_2_load_1 = tmp_acc_7_fu_957_p2;
    end else begin
        ap_sig_allocacmp_tmp_acc_2_load_1 = tmp_acc_2_fu_172;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln548_1_reg_1249 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_tmp_acc_2_load_2 = tmp_hist_V_1_q0;
    end else begin
        ap_sig_allocacmp_tmp_acc_2_load_2 = tmp_acc_2_fu_172;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_326)) begin
        ap_sig_allocacmp_tmp_acc_4_load_1 = tmp_acc_8_fu_975_p2;
    end else begin
        ap_sig_allocacmp_tmp_acc_4_load_1 = tmp_acc_4_fu_180;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln548_2_reg_1258 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_tmp_acc_4_load_2 = tmp_hist_V_2_q0;
    end else begin
        ap_sig_allocacmp_tmp_acc_4_load_2 = tmp_acc_4_fu_180;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_326)) begin
        ap_sig_allocacmp_tmp_acc_load_1 = tmp_acc_6_fu_939_p2;
    end else begin
        ap_sig_allocacmp_tmp_acc_load_1 = tmp_acc_fu_164;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln548_reg_1240 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_tmp_acc_load_2 = tmp_hist_V_q0;
    end else begin
        ap_sig_allocacmp_tmp_acc_load_2 = tmp_acc_fu_164;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1) & (icmp_ln515_reg_1220 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        demosaic_out_data241_blk_n = demosaic_out_data241_empty_n;
    end else begin
        demosaic_out_data241_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln515_reg_1220 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        demosaic_out_data241_read = 1'b1;
    end else begin
        demosaic_out_data241_read = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1) & (icmp_ln515_reg_1220 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        impop_data1_blk_n = impop_data1_full_n;
    end else begin
        impop_data1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln515_reg_1220 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        impop_data1_write = 1'b1;
    end else begin
        impop_data1_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln515_reg_1220_pp0_iter1_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp1_3_out_ap_vld = 1'b1;
    end else begin
        tmp1_3_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln515_reg_1220_pp0_iter1_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp1_4_out_ap_vld = 1'b1;
    end else begin
        tmp1_4_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln515_reg_1220_pp0_iter1_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp1_5_out_ap_vld = 1'b1;
    end else begin
        tmp1_5_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln515_reg_1220_pp0_iter1_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_3_out_ap_vld = 1'b1;
    end else begin
        tmp_3_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln515_reg_1220_pp0_iter1_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_4_out_ap_vld = 1'b1;
    end else begin
        tmp_4_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln515_reg_1220_pp0_iter1_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_5_out_ap_vld = 1'b1;
    end else begin
        tmp_5_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln515_reg_1220_pp0_iter1_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_acc1_2_out_ap_vld = 1'b1;
    end else begin
        tmp_acc1_2_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln515_reg_1220_pp0_iter1_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_acc1_4_out_ap_vld = 1'b1;
    end else begin
        tmp_acc1_4_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln515_reg_1220_pp0_iter1_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_acc1_out_ap_vld = 1'b1;
    end else begin
        tmp_acc1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln515_reg_1220_pp0_iter1_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_acc_2_out_ap_vld = 1'b1;
    end else begin
        tmp_acc_2_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln515_reg_1220_pp0_iter1_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_acc_4_out_ap_vld = 1'b1;
    end else begin
        tmp_acc_4_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln515_reg_1220_pp0_iter1_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_acc_out_ap_vld = 1'b1;
    end else begin
        tmp_acc_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_hist1_V_1_address0 = zext_ln558_1_fu_963_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_hist1_V_1_address0 = zext_ln557_1_fu_861_p1;
    end else begin
        tmp_hist1_V_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        tmp_hist1_V_1_ce0 = 1'b1;
    end else begin
        tmp_hist1_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln554_1_fu_851_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_hist1_V_1_we0 = 1'b1;
    end else begin
        tmp_hist1_V_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_hist1_V_2_address0 = zext_ln558_2_fu_981_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_hist1_V_2_address0 = zext_ln557_2_fu_911_p1;
    end else begin
        tmp_hist1_V_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        tmp_hist1_V_2_ce0 = 1'b1;
    end else begin
        tmp_hist1_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln554_2_fu_901_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_hist1_V_2_we0 = 1'b1;
    end else begin
        tmp_hist1_V_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_hist1_V_address0 = zext_ln558_fu_945_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_hist1_V_address0 = zext_ln557_fu_811_p1;
    end else begin
        tmp_hist1_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        tmp_hist1_V_ce0 = 1'b1;
    end else begin
        tmp_hist1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln554_fu_801_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_hist1_V_we0 = 1'b1;
    end else begin
        tmp_hist1_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            tmp_hist_V_1_address0 = zext_ln552_1_fu_844_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            tmp_hist_V_1_address0 = zext_ln551_1_fu_725_p1;
        end else begin
            tmp_hist_V_1_address0 = 'bx;
        end
    end else begin
        tmp_hist_V_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        tmp_hist_V_1_ce0 = 1'b1;
    end else begin
        tmp_hist_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln548_1_fu_715_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_hist_V_1_we0 = 1'b1;
    end else begin
        tmp_hist_V_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            tmp_hist_V_2_address0 = zext_ln552_2_fu_894_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            tmp_hist_V_2_address0 = zext_ln551_2_fu_771_p1;
        end else begin
            tmp_hist_V_2_address0 = 'bx;
        end
    end else begin
        tmp_hist_V_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        tmp_hist_V_2_ce0 = 1'b1;
    end else begin
        tmp_hist_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln548_2_fu_761_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_hist_V_2_we0 = 1'b1;
    end else begin
        tmp_hist_V_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            tmp_hist_V_address0 = zext_ln552_fu_794_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            tmp_hist_V_address0 = zext_ln551_fu_679_p1;
        end else begin
            tmp_hist_V_address0 = 'bx;
        end
    end else begin
        tmp_hist_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        tmp_hist_V_ce0 = 1'b1;
    end else begin
        tmp_hist_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln548_fu_669_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_hist_V_we0 = 1'b1;
    end else begin
        tmp_hist_V_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_done_pending_pp0 == 1'b0) & (ap_idle_pp0_1to2 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & ((impop_data1_full_n == 1'b0) | (demosaic_out_data241_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & ((impop_data1_full_n == 1'b0) | (demosaic_out_data241_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & ((impop_data1_full_n == 1'b0) | (demosaic_out_data241_empty_n == 1'b0)));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_01001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((impop_data1_full_n == 1'b0) & (icmp_ln515_reg_1220 == 1'd0)) | ((icmp_ln515_reg_1220 == 1'd0) & (demosaic_out_data241_empty_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage1_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((impop_data1_full_n == 1'b0) & (icmp_ln515_reg_1220 == 1'd0)) | ((icmp_ln515_reg_1220 == 1'd0) & (demosaic_out_data241_empty_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((impop_data1_full_n == 1'b0) & (icmp_ln515_reg_1220 == 1'd0)) | ((icmp_ln515_reg_1220 == 1'd0) & (demosaic_out_data241_empty_n == 1'b0))));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_pp0_stage1_iter0 = (((impop_data1_full_n == 1'b0) & (icmp_ln515_reg_1220 == 1'd0)) | ((icmp_ln515_reg_1220 == 1'd0) & (demosaic_out_data241_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_state3_pp0_stage0_iter1 = ((impop_data1_full_n == 1'b0) | (demosaic_out_data241_empty_n == 1'b0));
end

assign ap_block_state4_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_326 = ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_412 = ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage1;

assign col_3_fu_596_p2 = (ap_sig_allocacmp_col_2 + 32'd2);

assign icmp_ln515_fu_590_p2 = ((ap_sig_allocacmp_col_2 == p_cast_fu_518_p1) ? 1'b1 : 1'b0);

assign icmp_ln548_1_fu_715_p2 = ((tmp_4_fu_148 == zext_ln598_2_fu_711_p1) ? 1'b1 : 1'b0);

assign icmp_ln548_2_fu_761_p2 = ((tmp_5_fu_156 == zext_ln598_4_fu_757_p1) ? 1'b1 : 1'b0);

assign icmp_ln548_fu_669_p2 = ((tmp_3_fu_140 == zext_ln598_fu_637_p1) ? 1'b1 : 1'b0);

assign icmp_ln554_1_fu_851_p2 = ((tmp1_1_fu_152 == zext_ln598_3_fu_840_p1) ? 1'b1 : 1'b0);

assign icmp_ln554_2_fu_901_p2 = ((tmp1_2_fu_160 == zext_ln598_5_fu_890_p1) ? 1'b1 : 1'b0);

assign icmp_ln554_fu_801_p2 = ((tmp1_fu_144 == zext_ln598_1_fu_791_p1) ? 1'b1 : 1'b0);

assign impop_data1_din = demosaic_out_data241_dout;

assign lhs_V_10_fu_816_p3 = {{reg_510}, {6'd0}};

assign lhs_V_11_fu_733_p3 = {{reg_514}, {6'd0}};

assign lhs_V_12_fu_866_p3 = {{reg_514}, {6'd0}};

assign lhs_V_8_fu_645_p3 = {{trunc_ln884_1_fu_641_p1}, {6'd0}};

assign lhs_V_9_fu_687_p3 = {{reg_510}, {6'd0}};

assign lhs_V_fu_614_p3 = {{trunc_ln884_reg_1224}, {6'd0}};

assign p_cast_fu_518_p1 = empty;

assign ret_V_46_fu_653_p2 = (lhs_V_8_fu_645_p3 | 16'd32);

assign ret_V_47_fu_695_p2 = (lhs_V_9_fu_687_p3 | 16'd32);

assign ret_V_48_fu_824_p2 = (lhs_V_10_fu_816_p3 | 16'd32);

assign ret_V_49_fu_741_p2 = (lhs_V_11_fu_733_p3 | 16'd32);

assign ret_V_50_fu_874_p2 = (lhs_V_12_fu_866_p3 | 16'd32);

assign ret_V_fu_621_p2 = (lhs_V_fu_614_p3 | 16'd32);

assign tmp1_3_out = tmp1_fu_144;

assign tmp1_4_out = tmp1_1_fu_152;

assign tmp1_5_out = tmp1_2_fu_160;

assign tmp_10_fu_747_p4 = {{ret_V_49_fu_741_p2[15:6]}};

assign tmp_12_fu_880_p4 = {{ret_V_50_fu_874_p2[15:6]}};

assign tmp_3_out = tmp_3_fu_140;

assign tmp_4_out = tmp_4_fu_148;

assign tmp_5_out = tmp_5_fu_156;

assign tmp_6_fu_701_p4 = {{ret_V_47_fu_695_p2[15:6]}};

assign tmp_8_fu_830_p4 = {{ret_V_48_fu_824_p2[15:6]}};

assign tmp_acc1_2_out = tmp_acc1_2_fu_176;

assign tmp_acc1_4_out = tmp_acc1_4_fu_184;

assign tmp_acc1_6_fu_1008_p2 = (ap_sig_allocacmp_tmp_acc1_load_2 + 32'd1);

assign tmp_acc1_7_fu_1022_p2 = (ap_sig_allocacmp_tmp_acc1_2_load_2 + 32'd1);

assign tmp_acc1_8_fu_1036_p2 = (ap_sig_allocacmp_tmp_acc1_4_load_2 + 32'd1);

assign tmp_acc1_out = tmp_acc1_fu_168;

assign tmp_acc_2_out = tmp_acc_2_fu_172;

assign tmp_acc_4_out = tmp_acc_4_fu_180;

assign tmp_acc_6_fu_939_p2 = (ap_sig_allocacmp_tmp_acc_load_2 + 32'd1);

assign tmp_acc_7_fu_957_p2 = (ap_sig_allocacmp_tmp_acc_2_load_2 + 32'd1);

assign tmp_acc_8_fu_975_p2 = (ap_sig_allocacmp_tmp_acc_4_load_2 + 32'd1);

assign tmp_acc_out = tmp_acc_fu_164;

assign tmp_hist1_V_1_d0 = ap_sig_allocacmp_tmp_acc1_2_load_1;

assign tmp_hist1_V_2_d0 = ap_sig_allocacmp_tmp_acc1_4_load_1;

assign tmp_hist1_V_d0 = ap_sig_allocacmp_tmp_acc1_load_1;

assign tmp_hist_V_1_d0 = ap_sig_allocacmp_tmp_acc_2_load_1;

assign tmp_hist_V_2_d0 = ap_sig_allocacmp_tmp_acc_4_load_1;

assign tmp_hist_V_d0 = ap_sig_allocacmp_tmp_acc_load_1;

assign tmp_s_fu_627_p4 = {{ret_V_fu_621_p2[15:6]}};

assign trunc_ln884_1_fu_641_p1 = demosaic_out_data241_dout[9:0];

assign trunc_ln884_fu_607_p1 = demosaic_out_data241_dout[9:0];

assign zext_ln551_1_fu_725_p1 = tmp_4_fu_148;

assign zext_ln551_2_fu_771_p1 = tmp_5_fu_156;

assign zext_ln551_fu_679_p1 = tmp_3_fu_140;

assign zext_ln552_1_fu_844_p1 = tmp_6_reg_1244;

assign zext_ln552_2_fu_894_p1 = tmp_10_reg_1253;

assign zext_ln552_fu_794_p1 = tmp_s_reg_1229;

assign zext_ln557_1_fu_861_p1 = tmp1_1_fu_152;

assign zext_ln557_2_fu_911_p1 = tmp1_2_fu_160;

assign zext_ln557_fu_811_p1 = tmp1_fu_144;

assign zext_ln558_1_fu_963_p1 = tmp_8_reg_1271;

assign zext_ln558_2_fu_981_p1 = tmp_12_reg_1285;

assign zext_ln558_fu_945_p1 = tmp_1_reg_1234;

assign zext_ln598_1_fu_791_p1 = tmp_1_reg_1234;

assign zext_ln598_2_fu_711_p1 = tmp_6_fu_701_p4;

assign zext_ln598_3_fu_840_p1 = tmp_8_fu_830_p4;

assign zext_ln598_4_fu_757_p1 = tmp_10_fu_747_p4;

assign zext_ln598_5_fu_890_p1 = tmp_12_fu_880_p4;

assign zext_ln598_fu_637_p1 = tmp_s_fu_627_p4;

endmodule //ISPPipeline_accel_AWBhistogramkernel_17_17_1080_1920_1_21_1_1024_Pipeline_COL_LOOP
